{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Interpretador","text":"<p>Universidade de Bras\u00edlia (UnB) Faculdade de Ci\u00eancia e Tecnologia em Engenharia (FCTE) Disciplina: Compiladores 1 Semestre: 2025.2 Professor: Sergio Freitas  </p>"},{"location":"#sobre","title":"Sobre","text":"<p>Este projeto consiste no desenvolvimento de um interpretador em C, no contexto da disciplina Compiladores 1 (2025/2), ministrada pelo professor Sergio Freitas na Universidade de Bras\u00edlia - UnB. A constru\u00e7\u00e3o do interpretador segue a metodologia Problem Based Learning (PBL), promovendo a consolida\u00e7\u00e3o pr\u00e1tica dos conte\u00fados estudados ao longo do semestre. O sistema \u00e9 implementado com as ferramentas Flex (para a an\u00e1lise l\u00e9xica) e Bison (para a an\u00e1lise sint\u00e1tica), integradas em um ambiente C.</p>"},{"location":"#equipe-de-desenvolvimento","title":"Equipe de Desenvolvimento","text":"<p>Dara Maria(@daramariabs)</p> <p>Gustavo Oki(@GustOki)</p> <p>Samara Alves(@SamaraAlvess)</p> <p>Marcos Quixas(@marcosfilhopq)</p> <p>Davi Nunes(@davirnunes)</p>"},{"location":"Dificuldades/dificuldades/","title":"Dificuldades do Projeto","text":"<p>Durante o desenvolvimento do Interpretador, a equipe enfrentou alguns desafios importantes que impactaram diretamente nas decis\u00f5es de projeto e na organiza\u00e7\u00e3o das entregas.  </p>"},{"location":"Dificuldades/dificuldades/#compilador-x-interpretador","title":"Compilador x Interpretador","text":"<p>Um dos primeiros debates do grupo foi decidir se seria implementado um compilador ou um interpretador.  </p> <ul> <li>O compilador permitiria otimiza\u00e7\u00f5es mais avan\u00e7adas e gera\u00e7\u00e3o de c\u00f3digo eficiente, mas demandaria mais esfor\u00e7o e conhecimento em est\u00e1gios como an\u00e1lise sem\u00e2ntica, gera\u00e7\u00e3o de c\u00f3digo intermedi\u00e1rio e final.  </li> <li>O interpretador, por outro lado, se mostrou mais vi\u00e1vel para os prazos da disciplina, j\u00e1 que possibilita a execu\u00e7\u00e3o direta da AST (Abstract Syntax Tree), facilitando a valida\u00e7\u00e3o das constru\u00e7\u00f5es da linguagem.  </li> </ul> <p>\u27a1\ufe0f Ap\u00f3s discuss\u00f5es, a equipe optou por seguir com o interpretador.</p>"},{"location":"Dificuldades/dificuldades/#escolha-da-linguagem-de-implementacao","title":"Escolha da Linguagem de Implementa\u00e7\u00e3o","text":"<p>Outro ponto de dificuldade foi escolher a linguagem para implementar o projeto. As op\u00e7\u00f5es levantadas foram: Python e C.  </p> <ul> <li>O Python oferecia facilidade de prototipagem, mas menor integra\u00e7\u00e3o com Flex/Bison.  </li> <li>O C, apesar de exigir maior aten\u00e7\u00e3o \u00e0 manipula\u00e7\u00e3o de mem\u00f3ria e estruturas, mostrou-se o mais adequado por ser compat\u00edvel com Flex/Bison e alinhar com os objetivos da disciplina.  </li> </ul> <p>\u27a1\ufe0f A decis\u00e3o final foi implementar em C.</p>"},{"location":"Dificuldades/dificuldades/#ferramentas-e-integracao","title":"Ferramentas e Integra\u00e7\u00e3o","text":"<ul> <li>Configurar corretamente o ambiente com Flex e Bison gerou dificuldades iniciais, especialmente para a equipe que n\u00e3o havia trabalhado antes com essas ferramentas.  </li> <li>A equipe precisou alinhar vers\u00f5es, corrigir problemas de instala\u00e7\u00e3o e entender a estrutura m\u00ednima de arquivos <code>.l</code> e <code>.y</code>.  </li> </ul>"},{"location":"Dificuldades/dificuldades/#organizacao-em-equipe","title":"Organiza\u00e7\u00e3o em Equipe","text":"<ul> <li>O trabalho em grupo tamb\u00e9m trouxe o desafio de dividir responsabilidades de forma equilibrada.  </li> <li>Nem todos tinham a mesma experi\u00eancia com Git/GitHub, o que gerou dificuldades no in\u00edcio com versionamento e integra\u00e7\u00e3o de c\u00f3digo.  </li> </ul>"},{"location":"Dificuldades/dificuldades/#conclusao","title":"Conclus\u00e3o","text":"<p>Apesar das dificuldades, esses desafios foram fundamentais para o aprendizado da equipe, que conseguiu avan\u00e7ar nas tomadas de decis\u00e3o, melhorar a colabora\u00e7\u00e3o e desenvolver uma solu\u00e7\u00e3o funcional dentro do prazo da disciplina.</p>"},{"location":"Planejamento/planejamento/","title":"Planejamento do Projeto","text":"<p>Esta se\u00e7\u00e3o apresenta o plano de sprints para o desenvolvimento do Interpretador, descrevendo os objetivos, entregas, tarefas e observa\u00e7\u00f5es de cada ciclo. O planejamento busca organizar o fluxo de trabalho, garantir a evolu\u00e7\u00e3o incremental do sistema e facilitar a integra\u00e7\u00e3o entre os membros da equipe.</p>"},{"location":"Planejamento/planejamento/#sprint-1","title":"\ud83d\udccc Sprint 1","text":"<p>Objetivos </p> <ul> <li>Formar equipes e organizar ambiente (reposit\u00f3rio, ferramentas, Flex/Bison);</li> <li>Definir linguagem-fonte e gram\u00e1tica inicial.  </li> </ul> <p>Entregas </p> <ul> <li>Documento inicial com tokens e exemplos;  </li> <li>Prot\u00f3tipo de gram\u00e1tica para Bison;  </li> <li>Ambiente configurado (hello world Flex/Bison).  </li> </ul> <p>Tarefas </p> <ul> <li>Criar reposit\u00f3rio e adicionar membros (incluir sergioaafreitas); </li> <li>Criar <code>.l</code> e <code>.y</code> m\u00ednimos;  </li> <li>Definir sintaxe b\u00e1sica em <code>docs/especificacao_linguagem.md</code>.  </li> </ul> <p>Observa\u00e7\u00f5es </p> <ul> <li>Daily r\u00e1pida nas quartas-feiras;</li> <li>Familiarizar-se com Git/GitHub.  </li> </ul>"},{"location":"Planejamento/planejamento/#sprint-2","title":"\ud83d\udccc Sprint 2","text":"<p>Objetivos </p> <ul> <li>Completar an\u00e1lise l\u00e9xica (Flex); </li> <li>Implementar regras b\u00e1sicas do parser (Bison).  </li> </ul> <p>Entregas </p> <ul> <li><code>.l</code> completo; primeiras regras em <code>.y</code>.</li> </ul> <p>Tarefas </p> <ul> <li>Finalizar regexs no <code>.l</code> (espa\u00e7os, coment\u00e1rios);</li> <li>Regras sint\u00e1ticas b\u00e1sicas em <code>.y</code>;</li> <li>Testes l\u00e9xicos/sint\u00e1ticos com exemplos.  </li> </ul>"},{"location":"Planejamento/planejamento/#sprint-3","title":"\ud83d\udccc Sprint 3","text":"<p>Objetivos </p> <ul> <li>Construir AST; iniciar an\u00e1lise sem\u00e2ntica b\u00e1sica;</li> <li>Melhorar mensagens de erro.  </li> </ul> <p>Entregas </p> <ul> <li>Estruturas/classes da AST;</li> <li>M\u00f3dulo sem\u00e2ntico inicial; </li> <li>Parser que constr\u00f3i AST.  </li> </ul> <p>Tarefas </p> <ul> <li>Implementar a\u00e7\u00f5es no <code>.y</code> para criar n\u00f3s da AST;  </li> <li>Criar tabela de s\u00edmbolos; </li> <li>Tratar erros b\u00e1sicos.  </li> </ul>"},{"location":"Planejamento/planejamento/#sprint-4","title":"\ud83d\udccc Sprint 4","text":"<p>Objetivos </p> <ul> <li>Implementar interpreta\u00e7\u00e3o da AST (execu\u00e7\u00e3o direta);  </li> <li>Aprimorar a an\u00e1lise sem\u00e2ntica, tratando constru\u00e7\u00f5es mais complexas;</li> </ul> <p>Entregas </p> <ul> <li>M\u00f3dulo interpretador capaz de executar instru\u00e7\u00f5es; </li> <li>An\u00e1lise sem\u00e2ntica mais robusta;  </li> </ul> <p>Tarefas </p> <ul> <li>Criar a l\u00f3gica de interpreta\u00e7\u00e3o recursiva (<code>interpretNode()</code> / m\u00e9todos <code>eval()</code> dos n\u00f3s);  </li> <li>Consolidar estruturas de controle (<code>if</code>, <code>while</code>, etc.);  </li> <li>Testar o interpretador com programas de exemplo.</li> </ul>"},{"location":"Planejamento/planejamento/#sprint-5","title":"\ud83d\udccc Sprint 5","text":"<p>Objetivos </p> <ul> <li>Adicionar otimiza\u00e7\u00f5es opcionais (ex.: simplifica\u00e7\u00e3o de express\u00f5es constantes);</li> <li>Incluir recursos adicionais (fun\u00e7\u00f5es, arrays, strings);  </li> <li>Realizar testes integrados e preparar entrega final.  </li> </ul> <p>Entregas </p> <ul> <li>Interpretador ampliado, com otimiza\u00e7\u00f5es e funcionalidades extras; </li> <li>Testes de integra\u00e7\u00e3o;</li> <li>Vers\u00e3o final pronta para entrega via Teams.  </li> </ul> <p>Tarefas </p> <ul> <li>Implementar otimiza\u00e7\u00f5es simples (constant folding, remo\u00e7\u00e3o de n\u00f3s redundantes);  </li> <li>Estender a linguagem com novos recursos, se houver tempo; </li> <li>Testar intensivamente e entregar o projeto final.  </li> </ul>"},{"location":"Planejamento/planejamento/#sprint-6","title":"\ud83d\udccc Sprint 6","text":"<p>Objetivos </p> <ul> <li>Participar das entrevistas finais com o professor; </li> <li>Corrigir pend\u00eancias/bugs emergentes;</li> <li>Concluir a documenta\u00e7\u00e3o e encerrar a disciplina.  </li> </ul> <p>Entregas </p> <ul> <li>Entrevistas de entrega do projeto final;  </li> <li>Documenta\u00e7\u00e3o completa (README, manual de uso, explica\u00e7\u00f5es sobre a AST e a execu\u00e7\u00e3o);  </li> <li>Ajustes finais (caso o professor detecte problemas).  </li> </ul> <p>Tarefas </p> <ul> <li>Preparar-se para as entrevistas: cada membro domina parser, AST, sem\u00e2ntica e interpretador; </li> <li>Corrigir falhas apontadas; </li> <li>Finalizar documenta\u00e7\u00e3o e organizar exemplos de uso.  </li> </ul>"}]}